#include <iostream>
#include <cstring>
#include "node.h"
#include "student.h"

using namespace std;

void add(char* a, char* b, int c, float d, Node** e, int f);
void print(Node** a, int b);
int hashf(Student* a, int b);

int main() {
  int tableSize = 100;
  Node** ht;
  ht = new Node*[tableSize];
  for (int i = 0; i < tableSize; i++) {
    ht[i] = NULL;
  }
  char* name = new char[80];
  char* lastName = new char[80];
  int id;
  float gpa;
  char* input = new char[80];
  cin.get(input, 10);
  cin.ignore(10, '\n');
  if (strcmp(input, "ADD") == 0) {
    cin.get(name, 80);
    cin.ignore(5, '\n');
    cin.get(lastName, 80);
    cin.ignore(5, '\n');
    cin >> id;
    cin.ignore(5, '\n');
    cin >> gpa;
    cin.ignore(5, '\n');
    add(name, lastName, id, gpa, ht, tableSize);
  }
  if (strcmp(input, "PRINT") ==0) {
    print(ht, tableSize);
  }
}

void add(char* name, char* lastName, int id, float gpa, Node** ht, int tableSize) {
  Student* student = new Student(name, lastName, id, gpa);
  Node* node = new Node(student);
  int index = hashf(student, tableSize);
  if (ht[index] == NULL) {
    ht[index] = node;
    cout << ht[index];
  }
  else if (ht[index] != NULL) {
    Node* temp = ht[index];
    node -> setNext(temp);
    ht[index] = node;
  }
  else if (ht[index] -> getNext() != NULL) {
    if (ht[index] -> getNext() -> getNext() != NULL) {
      if (ht[index] -> getNext() -> getNext() -> getNext() != NULL) {
	if (ht[index] -> getNext() -> getNext() -> getNext() -> getNext() != NULL) {
	  
	}
      }
    }
  }
}

void print(Node** ht, int tableSize) {
  cout << " - - - - - - - - - - - - - - - - - - " << endl;
  for (int i = 0; i < tableSize; i++) {
    cout << ht[i] -> getStudent() -> getName() << " ";
  }
}

int hashf(Student* student, int tableSize) {
  int index = student -> getId() % tableSize;
  return index;
}

